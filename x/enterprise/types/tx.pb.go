// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mainchain/enterprise/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUndPurchaseOrder represents a message to raise a new purchase order
type MsgUndPurchaseOrder struct {
	// purchaser is the address of the account raising the purchase order
	Purchaser string `protobuf:"bytes,1,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	// amount is the amount of eFUND in nund
	Amount types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgUndPurchaseOrder) Reset()         { *m = MsgUndPurchaseOrder{} }
func (m *MsgUndPurchaseOrder) String() string { return proto.CompactTextString(m) }
func (*MsgUndPurchaseOrder) ProtoMessage()    {}
func (*MsgUndPurchaseOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{0}
}
func (m *MsgUndPurchaseOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndPurchaseOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndPurchaseOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndPurchaseOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndPurchaseOrder.Merge(m, src)
}
func (m *MsgUndPurchaseOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndPurchaseOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndPurchaseOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndPurchaseOrder proto.InternalMessageInfo

// MsgUndPurchaseOrderResponse defines the Msg/UndPurchaseOrder response type.
type MsgUndPurchaseOrderResponse struct {
	PurchaseOrderId uint64 `protobuf:"varint,1,opt,name=purchase_order_id,json=purchaseOrderId,proto3" json:"purchase_order_id,omitempty"`
}

func (m *MsgUndPurchaseOrderResponse) Reset()         { *m = MsgUndPurchaseOrderResponse{} }
func (m *MsgUndPurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUndPurchaseOrderResponse) ProtoMessage()    {}
func (*MsgUndPurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{1}
}
func (m *MsgUndPurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndPurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndPurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndPurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndPurchaseOrderResponse.Merge(m, src)
}
func (m *MsgUndPurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndPurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndPurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndPurchaseOrderResponse proto.InternalMessageInfo

func (m *MsgUndPurchaseOrderResponse) GetPurchaseOrderId() uint64 {
	if m != nil {
		return m.PurchaseOrderId
	}
	return 0
}

// MsgProcessUndPurchaseOrder represents a message to processed a raised purchase order
type MsgProcessUndPurchaseOrder struct {
	// purchase_order_id is the ID of the purchase order being raised
	PurchaseOrderId uint64 `protobuf:"varint,1,opt,name=purchase_order_id,json=purchaseOrderId,proto3" json:"id" yaml:"id"`
	// decision is an enumerated PurchaseOrderStatus representing, for example accepted/rejected
	Decision PurchaseOrderStatus `protobuf:"varint,2,opt,name=decision,proto3,enum=mainchain.enterprise.v1.PurchaseOrderStatus" json:"decision,omitempty"`
	// signer is the address of the authorised decision maker
	Signer string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgProcessUndPurchaseOrder) Reset()         { *m = MsgProcessUndPurchaseOrder{} }
func (m *MsgProcessUndPurchaseOrder) String() string { return proto.CompactTextString(m) }
func (*MsgProcessUndPurchaseOrder) ProtoMessage()    {}
func (*MsgProcessUndPurchaseOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{2}
}
func (m *MsgProcessUndPurchaseOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProcessUndPurchaseOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProcessUndPurchaseOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProcessUndPurchaseOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProcessUndPurchaseOrder.Merge(m, src)
}
func (m *MsgProcessUndPurchaseOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgProcessUndPurchaseOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProcessUndPurchaseOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProcessUndPurchaseOrder proto.InternalMessageInfo

// MsgProcessUndPurchaseOrderResponse defines the Msg/ProcessUndPurchaseOrder response type.
type MsgProcessUndPurchaseOrderResponse struct {
}

func (m *MsgProcessUndPurchaseOrderResponse) Reset()         { *m = MsgProcessUndPurchaseOrderResponse{} }
func (m *MsgProcessUndPurchaseOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgProcessUndPurchaseOrderResponse) ProtoMessage()    {}
func (*MsgProcessUndPurchaseOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{3}
}
func (m *MsgProcessUndPurchaseOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProcessUndPurchaseOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProcessUndPurchaseOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProcessUndPurchaseOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProcessUndPurchaseOrderResponse.Merge(m, src)
}
func (m *MsgProcessUndPurchaseOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgProcessUndPurchaseOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProcessUndPurchaseOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProcessUndPurchaseOrderResponse proto.InternalMessageInfo

// MsgWhitelistAddress represents a message to processed an address whitelist action.
// only addresses whitelisted by an authorised decision maker can raise new purchase orders
type MsgWhitelistAddress struct {
	// address is the address for which the action is being executed
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// signer is the address of the authorised decision maker
	Signer string `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
	// whitelist_action is the action being executed, and is either add or remove.
	Action WhitelistAction `protobuf:"varint,3,opt,name=whitelist_action,json=whitelistAction,proto3,enum=mainchain.enterprise.v1.WhitelistAction" json:"action" yaml:"action"`
}

func (m *MsgWhitelistAddress) Reset()         { *m = MsgWhitelistAddress{} }
func (m *MsgWhitelistAddress) String() string { return proto.CompactTextString(m) }
func (*MsgWhitelistAddress) ProtoMessage()    {}
func (*MsgWhitelistAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{4}
}
func (m *MsgWhitelistAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWhitelistAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWhitelistAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWhitelistAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWhitelistAddress.Merge(m, src)
}
func (m *MsgWhitelistAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgWhitelistAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWhitelistAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWhitelistAddress proto.InternalMessageInfo

// MsgWhitelistAddressResponse defines the Msg/WhitelistAddress response type.
type MsgWhitelistAddressResponse struct {
}

func (m *MsgWhitelistAddressResponse) Reset()         { *m = MsgWhitelistAddressResponse{} }
func (m *MsgWhitelistAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWhitelistAddressResponse) ProtoMessage()    {}
func (*MsgWhitelistAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{5}
}
func (m *MsgWhitelistAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWhitelistAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWhitelistAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWhitelistAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWhitelistAddressResponse.Merge(m, src)
}
func (m *MsgWhitelistAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWhitelistAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWhitelistAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWhitelistAddressResponse proto.InternalMessageInfo

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/staking parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{6}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91499ee206e3f069, []int{7}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUndPurchaseOrder)(nil), "mainchain.enterprise.v1.MsgUndPurchaseOrder")
	proto.RegisterType((*MsgUndPurchaseOrderResponse)(nil), "mainchain.enterprise.v1.MsgUndPurchaseOrderResponse")
	proto.RegisterType((*MsgProcessUndPurchaseOrder)(nil), "mainchain.enterprise.v1.MsgProcessUndPurchaseOrder")
	proto.RegisterType((*MsgProcessUndPurchaseOrderResponse)(nil), "mainchain.enterprise.v1.MsgProcessUndPurchaseOrderResponse")
	proto.RegisterType((*MsgWhitelistAddress)(nil), "mainchain.enterprise.v1.MsgWhitelistAddress")
	proto.RegisterType((*MsgWhitelistAddressResponse)(nil), "mainchain.enterprise.v1.MsgWhitelistAddressResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "mainchain.enterprise.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "mainchain.enterprise.v1.MsgUpdateParamsResponse")
}

func init() { proto.RegisterFile("mainchain/enterprise/v1/tx.proto", fileDescriptor_91499ee206e3f069) }

var fileDescriptor_91499ee206e3f069 = []byte{
	// 723 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x3f, 0x6f, 0xd3, 0x4e,
	0x18, 0x8e, 0x93, 0x2a, 0xbf, 0x5f, 0x8e, 0x3f, 0x6d, 0xdd, 0x8a, 0xa4, 0x41, 0xc4, 0x95, 0x05,
	0x28, 0x8a, 0xa8, 0xdd, 0xa6, 0x88, 0x8a, 0x30, 0x20, 0xcc, 0x42, 0x87, 0x8a, 0xe2, 0x0a, 0x21,
	0xb1, 0x44, 0x17, 0xfb, 0x70, 0x0e, 0xd5, 0x3e, 0xcb, 0x77, 0x49, 0x5b, 0x46, 0x26, 0x04, 0x0c,
	0x7c, 0x02, 0xd4, 0x91, 0xb1, 0x03, 0x1f, 0xa2, 0x63, 0xc5, 0xc4, 0x14, 0xa1, 0x74, 0x28, 0xea,
	0x00, 0x52, 0x3f, 0x01, 0xf2, 0xf9, 0xe2, 0xa4, 0x49, 0x9d, 0x16, 0x96, 0xea, 0xee, 0xbd, 0xe7,
	0x7d, 0xef, 0xb9, 0xa7, 0xcf, 0xe3, 0x80, 0x79, 0x17, 0x62, 0xcf, 0x6a, 0x42, 0xec, 0xe9, 0xc8,
	0x63, 0x28, 0xf0, 0x03, 0x4c, 0x91, 0xde, 0x5e, 0xd2, 0xd9, 0xb6, 0xe6, 0x07, 0x84, 0x11, 0x39,
	0x1f, 0x23, 0xb4, 0x3e, 0x42, 0x6b, 0x2f, 0x15, 0x4b, 0x16, 0xa1, 0x2e, 0xa1, 0x7a, 0x03, 0xf2,
	0x8e, 0x06, 0x62, 0x70, 0x49, 0xb7, 0x08, 0xf6, 0xa2, 0xc6, 0x62, 0x5e, 0x9c, 0xbb, 0xd4, 0x09,
	0x07, 0xba, 0xd4, 0x11, 0x07, 0x73, 0xd1, 0x41, 0x9d, 0xef, 0xf4, 0x68, 0x23, 0x8e, 0x66, 0x1d,
	0xe2, 0x90, 0xa8, 0x1e, 0xae, 0x44, 0xb5, 0x9c, 0x44, 0x72, 0x80, 0x50, 0x84, 0x9c, 0x86, 0x2e,
	0xf6, 0x88, 0xce, 0xff, 0x46, 0x25, 0xf5, 0xb3, 0x04, 0x66, 0xd6, 0xa8, 0xf3, 0xdc, 0xb3, 0xd7,
	0x5b, 0x81, 0xd5, 0x84, 0x14, 0x3d, 0x0d, 0x6c, 0x14, 0xc8, 0xf7, 0x40, 0xce, 0x17, 0x85, 0xa0,
	0x20, 0xcd, 0x4b, 0xe5, 0x9c, 0x51, 0xf8, 0xf6, 0x75, 0x61, 0x56, 0xf0, 0x79, 0x64, 0xdb, 0x01,
	0xa2, 0x74, 0x83, 0x05, 0xd8, 0x73, 0xcc, 0x3e, 0x54, 0x5e, 0x01, 0x59, 0xe8, 0x92, 0x96, 0xc7,
	0x0a, 0xe9, 0x79, 0xa9, 0x7c, 0xa9, 0x3a, 0xa7, 0x89, 0x8e, 0x50, 0x07, 0x4d, 0xe8, 0xa0, 0x3d,
	0x26, 0xd8, 0x33, 0x26, 0xf6, 0x3b, 0x4a, 0xca, 0x14, 0xf0, 0xda, 0xb5, 0x77, 0xbb, 0x4a, 0xea,
	0xe7, 0xae, 0x92, 0x7a, 0x7b, 0xb4, 0x57, 0xe9, 0x0f, 0x54, 0x57, 0xc1, 0xf5, 0x33, 0xf8, 0x99,
	0x88, 0xfa, 0xc4, 0xa3, 0x48, 0xae, 0x80, 0xe9, 0x1e, 0xb6, 0x4e, 0xc2, 0x93, 0x3a, 0xb6, 0x39,
	0xdf, 0x09, 0x73, 0xd2, 0x1f, 0xec, 0x58, 0xb5, 0xd5, 0x5f, 0x12, 0x28, 0xae, 0x51, 0x67, 0x3d,
	0x20, 0x16, 0xa2, 0x74, 0xe4, 0xc9, 0x0f, 0x13, 0x47, 0x19, 0x33, 0xc7, 0x1d, 0x25, 0x8d, 0xed,
	0x93, 0x8e, 0x92, 0xdb, 0x81, 0xee, 0x66, 0x4d, 0xc5, 0xb6, 0x3a, 0x32, 0x5f, 0x7e, 0x02, 0xfe,
	0xb7, 0x91, 0x85, 0x29, 0x26, 0x1e, 0x7f, 0xfd, 0xd5, 0xea, 0x1d, 0x2d, 0xc1, 0x1e, 0xda, 0xa9,
	0xab, 0x37, 0x18, 0x64, 0x2d, 0x6a, 0xc6, 0xdd, 0xf2, 0x22, 0xc8, 0x52, 0xec, 0x78, 0x28, 0x28,
	0x64, 0xce, 0x91, 0x5e, 0xe0, 0x6a, 0x33, 0x83, 0xf2, 0x89, 0xa2, 0x7a, 0x13, 0xa8, 0xc9, 0xef,
	0xed, 0x49, 0xa8, 0x7e, 0x4c, 0x73, 0x0b, 0xbc, 0x68, 0x62, 0x86, 0x36, 0x31, 0x65, 0xe2, 0x02,
	0xb9, 0x0a, 0xfe, 0x83, 0xd1, 0xf2, 0x5c, 0x03, 0xf4, 0x80, 0x03, 0xc4, 0xd3, 0x17, 0x23, 0x2e,
	0xbf, 0x01, 0x53, 0x5b, 0xbd, 0x9b, 0xeb, 0xd0, 0x62, 0xa1, 0x78, 0x19, 0x2e, 0x5e, 0x39, 0x51,
	0xbc, 0x3e, 0x55, 0x8e, 0x37, 0x6e, 0x75, 0x3b, 0x4a, 0x36, 0x5a, 0x1f, 0x77, 0x94, 0x6c, 0x34,
	0xe5, 0xa4, 0xa3, 0x5c, 0x89, 0xfe, 0x59, 0xd1, 0x5e, 0x35, 0x27, 0xb7, 0x4e, 0xf7, 0x9d, 0x2d,
	0xda, 0x0d, 0x6e, 0xb8, 0x61, 0x35, 0x62, 0xb5, 0xf6, 0x25, 0x30, 0x19, 0x1a, 0xd2, 0xb7, 0x21,
	0x43, 0xeb, 0x30, 0x80, 0x2e, 0x0d, 0xc3, 0x02, 0x5b, 0xac, 0x49, 0x02, 0xcc, 0x76, 0xce, 0x0f,
	0x4b, 0x0c, 0x95, 0x0d, 0x90, 0xf5, 0xf9, 0x04, 0x11, 0x16, 0x25, 0xd9, 0x2e, 0x1c, 0x66, 0xe4,
	0xc2, 0xc8, 0x7c, 0x39, 0xda, 0xab, 0x48, 0xa6, 0xe8, 0xac, 0xdd, 0xe7, 0x79, 0x89, 0x67, 0xbe,
	0x3f, 0xda, 0xab, 0xdc, 0xee, 0x7f, 0x10, 0xb6, 0x07, 0x3f, 0x09, 0x43, 0xb4, 0xd5, 0x39, 0x90,
	0x1f, 0x2a, 0xf5, 0x5e, 0x59, 0xfd, 0x9d, 0x01, 0x99, 0x35, 0xea, 0xc8, 0x6d, 0x30, 0x35, 0x92,
	0x93, 0x64, 0x53, 0x9f, 0x11, 0xd4, 0xe2, 0xdd, 0xbf, 0x41, 0xc7, 0xb1, 0xfe, 0x20, 0x81, 0x7c,
	0x52, 0x4e, 0x97, 0xc7, 0x4d, 0x4c, 0x68, 0x2a, 0x3e, 0xf8, 0x87, 0xa6, 0x98, 0x4d, 0x1b, 0x4c,
	0x8d, 0xa4, 0x63, 0xac, 0x0a, 0xc3, 0xe8, 0xf1, 0x2a, 0x24, 0x79, 0x4d, 0x7e, 0x0d, 0x2e, 0x9f,
	0xf2, 0x59, 0x79, 0xac, 0x96, 0x03, 0xc8, 0xe2, 0xe2, 0x45, 0x91, 0xbd, 0xbb, 0x8c, 0x67, 0xfb,
	0xdd, 0x92, 0x74, 0xd0, 0x2d, 0x49, 0x3f, 0xba, 0x25, 0xe9, 0xd3, 0x61, 0x29, 0x75, 0x70, 0x58,
	0x4a, 0x7d, 0x3f, 0x2c, 0xa5, 0x5e, 0xae, 0x38, 0x98, 0x35, 0x5b, 0x0d, 0xcd, 0x22, 0xae, 0xde,
	0xf2, 0xf0, 0x2b, 0x6c, 0xc1, 0x30, 0x3d, 0x0b, 0xe1, 0x3e, 0xc1, 0x69, 0x6c, 0xc7, 0x47, 0xb4,
	0x91, 0xe5, 0x3f, 0x31, 0xcb, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3f, 0xb6, 0xa9, 0xdc, 0x46,
	0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UndPurchaseOrder defines a method to create new purchase order.
	UndPurchaseOrder(ctx context.Context, in *MsgUndPurchaseOrder, opts ...grpc.CallOption) (*MsgUndPurchaseOrderResponse, error)
	// ProcessUndPurchaseOrder defines a method to process a decision on a purchase order.
	ProcessUndPurchaseOrder(ctx context.Context, in *MsgProcessUndPurchaseOrder, opts ...grpc.CallOption) (*MsgProcessUndPurchaseOrderResponse, error)
	// WhitelistAddress defines a method to execute a whitelist action.
	WhitelistAddress(ctx context.Context, in *MsgWhitelistAddress, opts ...grpc.CallOption) (*MsgWhitelistAddressResponse, error)
	// UpdateParams defines an operation for updating the x/enterprise module
	// parameters.
	// Since: cosmos-sdk 0.47
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UndPurchaseOrder(ctx context.Context, in *MsgUndPurchaseOrder, opts ...grpc.CallOption) (*MsgUndPurchaseOrderResponse, error) {
	out := new(MsgUndPurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/mainchain.enterprise.v1.Msg/UndPurchaseOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProcessUndPurchaseOrder(ctx context.Context, in *MsgProcessUndPurchaseOrder, opts ...grpc.CallOption) (*MsgProcessUndPurchaseOrderResponse, error) {
	out := new(MsgProcessUndPurchaseOrderResponse)
	err := c.cc.Invoke(ctx, "/mainchain.enterprise.v1.Msg/ProcessUndPurchaseOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WhitelistAddress(ctx context.Context, in *MsgWhitelistAddress, opts ...grpc.CallOption) (*MsgWhitelistAddressResponse, error) {
	out := new(MsgWhitelistAddressResponse)
	err := c.cc.Invoke(ctx, "/mainchain.enterprise.v1.Msg/WhitelistAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/mainchain.enterprise.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UndPurchaseOrder defines a method to create new purchase order.
	UndPurchaseOrder(context.Context, *MsgUndPurchaseOrder) (*MsgUndPurchaseOrderResponse, error)
	// ProcessUndPurchaseOrder defines a method to process a decision on a purchase order.
	ProcessUndPurchaseOrder(context.Context, *MsgProcessUndPurchaseOrder) (*MsgProcessUndPurchaseOrderResponse, error)
	// WhitelistAddress defines a method to execute a whitelist action.
	WhitelistAddress(context.Context, *MsgWhitelistAddress) (*MsgWhitelistAddressResponse, error)
	// UpdateParams defines an operation for updating the x/enterprise module
	// parameters.
	// Since: cosmos-sdk 0.47
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UndPurchaseOrder(ctx context.Context, req *MsgUndPurchaseOrder) (*MsgUndPurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndPurchaseOrder not implemented")
}
func (*UnimplementedMsgServer) ProcessUndPurchaseOrder(ctx context.Context, req *MsgProcessUndPurchaseOrder) (*MsgProcessUndPurchaseOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessUndPurchaseOrder not implemented")
}
func (*UnimplementedMsgServer) WhitelistAddress(ctx context.Context, req *MsgWhitelistAddress) (*MsgWhitelistAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhitelistAddress not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UndPurchaseOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUndPurchaseOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UndPurchaseOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mainchain.enterprise.v1.Msg/UndPurchaseOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UndPurchaseOrder(ctx, req.(*MsgUndPurchaseOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProcessUndPurchaseOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProcessUndPurchaseOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProcessUndPurchaseOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mainchain.enterprise.v1.Msg/ProcessUndPurchaseOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProcessUndPurchaseOrder(ctx, req.(*MsgProcessUndPurchaseOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WhitelistAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWhitelistAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WhitelistAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mainchain.enterprise.v1.Msg/WhitelistAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WhitelistAddress(ctx, req.(*MsgWhitelistAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mainchain.enterprise.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mainchain.enterprise.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UndPurchaseOrder",
			Handler:    _Msg_UndPurchaseOrder_Handler,
		},
		{
			MethodName: "ProcessUndPurchaseOrder",
			Handler:    _Msg_ProcessUndPurchaseOrder_Handler,
		},
		{
			MethodName: "WhitelistAddress",
			Handler:    _Msg_WhitelistAddress_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mainchain/enterprise/v1/tx.proto",
}

func (m *MsgUndPurchaseOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndPurchaseOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndPurchaseOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Purchaser) > 0 {
		i -= len(m.Purchaser)
		copy(dAtA[i:], m.Purchaser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaser)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUndPurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndPurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndPurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PurchaseOrderId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PurchaseOrderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgProcessUndPurchaseOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProcessUndPurchaseOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProcessUndPurchaseOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Decision != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Decision))
		i--
		dAtA[i] = 0x10
	}
	if m.PurchaseOrderId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PurchaseOrderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgProcessUndPurchaseOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProcessUndPurchaseOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProcessUndPurchaseOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWhitelistAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWhitelistAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWhitelistAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Action != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWhitelistAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWhitelistAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWhitelistAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUndPurchaseOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Purchaser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUndPurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PurchaseOrderId != 0 {
		n += 1 + sovTx(uint64(m.PurchaseOrderId))
	}
	return n
}

func (m *MsgProcessUndPurchaseOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PurchaseOrderId != 0 {
		n += 1 + sovTx(uint64(m.PurchaseOrderId))
	}
	if m.Decision != 0 {
		n += 1 + sovTx(uint64(m.Decision))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgProcessUndPurchaseOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWhitelistAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovTx(uint64(m.Action))
	}
	return n
}

func (m *MsgWhitelistAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUndPurchaseOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndPurchaseOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndPurchaseOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndPurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndPurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndPurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseOrderId", wireType)
			}
			m.PurchaseOrderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PurchaseOrderId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProcessUndPurchaseOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProcessUndPurchaseOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProcessUndPurchaseOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PurchaseOrderId", wireType)
			}
			m.PurchaseOrderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PurchaseOrderId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Decision", wireType)
			}
			m.Decision = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Decision |= PurchaseOrderStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProcessUndPurchaseOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProcessUndPurchaseOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProcessUndPurchaseOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWhitelistAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWhitelistAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWhitelistAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= WhitelistAction(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWhitelistAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWhitelistAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWhitelistAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
